"""Initial DB schema with all models

Revision ID: f9075d69670e
Revises: 
Create Date: 2025-06-06 15:42:52.608771+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f9075d69670e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute('CREATE EXTENSION IF NOT EXISTS "pgcrypto";')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_conversation_user_id', 'conversations', ['user_id'], unique=False)
    op.create_table('memories',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('source_id', sa.String(length=36), nullable=True),
    sa.Column('memory_metadata', sa.JSON(), nullable=True),
    sa.Column('importance', sa.Float(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_memories_is_active', 'memories', ['is_active'], unique=False)
    op.create_index('ix_memories_source_id', 'memories', ['source_id'], unique=False)
    op.create_index('ix_memories_user_id', 'memories', ['user_id'], unique=False)
    op.create_table('memory_chunks',
    sa.Column('memory_id', sa.String(length=36), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['memories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_memory_chunks_memory_id', 'memory_chunks', ['memory_id'], unique=False)
    op.create_index('ix_memory_chunks_memory_id_chunk_index', 'memory_chunks', ['memory_id', 'chunk_index'], unique=False)
    op.create_table('messages',
    sa.Column('conversation_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_message_conversation_id', 'messages', ['conversation_id'], unique=False)
    op.create_index('ix_message_role', 'messages', ['role'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_message_role', table_name='messages')
    op.drop_index('ix_message_conversation_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_memory_chunks_memory_id_chunk_index', table_name='memory_chunks')
    op.drop_index('ix_memory_chunks_memory_id', table_name='memory_chunks')
    op.drop_table('memory_chunks')
    op.drop_index('ix_memories_user_id', table_name='memories')
    op.drop_index('ix_memories_source_id', table_name='memories')
    op.drop_index('ix_memories_is_active', table_name='memories')
    op.drop_table('memories')
    op.drop_index('ix_conversation_user_id', table_name='conversations')
    op.drop_table('conversations')
    # ### end Alembic commands ###
