services:
  # PostgreSQL with pgvector
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mnemosyne
      POSTGRES_USER: mnemosyne
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mnemosyne_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-pgvector.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mnemosyne"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334

  # Mnemosyne Backend (Personal Instance)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MODE=personal
      - TRACK=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/mnemosyne
      - REDIS_URL=redis://redis:6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-this}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-32-bytes-long!}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - W3C_DID_ENABLED=true
      - W3C_DID_METHOD=mnem
    volumes:
      - ./backend:/app
      - backend_venv:/app/.venv
      - ./data/memories:/data/memories
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["/app/startup.sh"]

  # Shadow Orchestration Service
  shadow:
    build:
      context: ./shadow
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./shadow:/app
      - ./data/shadow:/data
    ports:
      - "8001:8001"
    depends_on:
      - backend
      - redis
    command: ["python", "-m", "uvicorn", "api.fastapi_server:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  # Dialogues Philosophical Agents
  dialogues:
    build:
      context: ./dialogues
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379
      - SHADOW_URL=http://shadow:8001
    volumes:
      - ./dialogues:/app
      - ./data/dialogues:/data
    ports:
      - "8002:8002"
    depends_on:
      - shadow
      - redis

  # Collective Codex (Collective Instance)
  collective:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MODE=collective
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/mnemosyne_collective
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SHADOW_URL=http://shadow:8001
    volumes:
      - ./backend:/app
      - ./collective:/collective
      - ./data/collective:/data/collective
    ports:
      - "8003:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      shadow:
        condition: service_started
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend Web UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_SHADOW_URL=http://localhost:8001
      - VITE_COLLECTIVE_URL=http://localhost:8003
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - shadow
    command: ["npm", "run", "dev", "--", "--host"]

  # Optional: IPFS for distributed storage (post-MVP)
  # ipfs:
  #   image: ipfs/go-ipfs:latest
  #   environment:
  #     - IPFS_PROFILE=server
  #   volumes:
  #     - ipfs_data:/data/ipfs
  #   ports:
  #     - "4001:4001"  # Swarm
  #     - "5001:5001"  # API
  #     - "8080:8080"  # Gateway

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  ipfs_data:
  backend_venv:

networks:
  default:
    name: mnemosyne_network